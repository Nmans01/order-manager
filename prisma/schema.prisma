generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String
  address Address?
  orders  Order[]
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  zip    String
}

model Order {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  customerId      String  @db.ObjectId
  statusId        String  @db.ObjectId
  shippingAddress Address
  items           Item[]

  customer User   @relation(fields: [customerId], references: [id])
  status   Status @relation(fields: [statusId], references: [id])
}

model Status {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  displayColor String       @default("white")
  orders       Order[]
  viewStatuses ViewStatus[]
}

// Many-to-many relationship requires intermediate model
model ViewStatus {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  viewId   String @db.ObjectId
  statusId String @db.ObjectId

  view   View   @relation(fields: [viewId], references: [id])
  status Status @relation(fields: [statusId], references: [id])
}

model View {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  viewStatuses ViewStatus[]
}

// Orders have items, items are instances of jobs
model Item {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId

  order Order @relation(fields: [orderId], references: [id])
}

// 
model Job {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
